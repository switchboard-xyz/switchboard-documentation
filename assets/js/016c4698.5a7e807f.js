"use strict";(self.webpackChunk_switchboard_xyz_v2_docs=self.webpackChunk_switchboard_xyz_v2_docs||[]).push([[1435],{5318:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),k=u(n),d=a,m=k["".concat(i,".").concat(d)]||k[d]||s[d]||l;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,c=new Array(l);c[0]=k;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var u=2;u<l;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},202:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return i},default:function(){return k},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var r=n(5773),a=n(808),l=(n(7378),n(5318)),c=["components"],o={sidebar_label:"Crank",title:"switchboardpy.crank"},i=void 0,u={unversionedId:"switchboardpy/crank",id:"switchboardpy/crank",title:"switchboardpy.crank",description:"CrankInitParams Objects",source:"@site/api/switchboardpy/crank.md",sourceDirName:"switchboardpy",slug:"/switchboardpy/crank",permalink:"/api/switchboardpy/crank",tags:[],version:"current",frontMatter:{sidebar_label:"Crank",title:"switchboardpy.crank"},sidebar:"tutorialSidebar",previous:{title:"Common",permalink:"/api/switchboardpy/common"},next:{title:"Job",permalink:"/api/switchboardpy/job"}},p=[{value:"CrankInitParams Objects",id:"crankinitparams-objects",children:[{value:"queue_account",id:"queue_account",children:[],level:4},{value:"name",id:"name",children:[],level:4},{value:"metadata",id:"metadata",children:[],level:4}],level:2},{value:"CrankPopParams Objects",id:"crankpopparams-objects",children:[{value:"payout_wallet",id:"payout_wallet",children:[],level:4},{value:"queue_pubkey",id:"queue_pubkey",children:[],level:4},{value:"queue_authority",id:"queue_authority",children:[],level:4},{value:"crank",id:"crank",children:[],level:4},{value:"queue",id:"queue",children:[],level:4},{value:"token_mint",id:"token_mint",children:[],level:4},{value:"ready_pubkeys",id:"ready_pubkeys",children:[],level:4}],level:2},{value:"CrankRow Objects",id:"crankrow-objects",children:[{value:"pubkey",id:"pubkey",children:[],level:4}],level:2},{value:"CrankAccount Objects",id:"crankaccount-objects",children:[],level:2}],s={toc:p};function k(e){var t=e.components,n=(0,a.Z)(e,c);return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"crankinitparams-objects"},"CrankInitParams Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass CrankInitParams()\n")),(0,l.kt)("p",null,"OracleQueueAccount for which this crank is associated"),(0,l.kt)("h4",{id:"queue_account"},"queue_account"),(0,l.kt)("p",null,"Buffer specifying crank name"),(0,l.kt)("h4",{id:"name"},"name"),(0,l.kt)("p",null,"Buffer specifying crank metadata"),(0,l.kt)("h4",{id:"metadata"},"metadata"),(0,l.kt)("p",null,"Optional max number of rows"),(0,l.kt)("h2",{id:"crankpopparams-objects"},"CrankPopParams Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass CrankPopParams()\n")),(0,l.kt)("p",null,"Specifies the wallet to reward for turning the crank."),(0,l.kt)("h4",{id:"payout_wallet"},"payout_wallet"),(0,l.kt)("p",null,"The pubkey of the linked oracle queue."),(0,l.kt)("h4",{id:"queue_pubkey"},"queue_pubkey"),(0,l.kt)("p",null,"The pubkey of the linked oracle queue authority."),(0,l.kt)("h4",{id:"queue_authority"},"queue_authority"),(0,l.kt)("p",null,"CrankAccount data"),(0,l.kt)("h4",{id:"crank"},"crank"),(0,l.kt)("p",null,"QueueAccount data"),(0,l.kt)("h4",{id:"queue"},"queue"),(0,l.kt)("p",null,"Token mint pubkey"),(0,l.kt)("h4",{id:"token_mint"},"token_mint"),(0,l.kt)("p",null,"Array of pubkeys to attempt to pop. If discluded, this will be loaded\nfrom the crank upon calling."),(0,l.kt)("h4",{id:"ready_pubkeys"},"ready_pubkeys"),(0,l.kt)("p",null,"Nonce to allow consecutive crank pops with the same blockhash."),(0,l.kt)("h2",{id:"crankrow-objects"},"CrankRow Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass CrankRow()\n")),(0,l.kt)("p",null,"Aggregator account pubkey"),(0,l.kt)("h4",{id:"pubkey"},"pubkey"),(0,l.kt)("p",null,"Next aggregator update timestamp to order the crank by"),(0,l.kt)("h2",{id:"crankaccount-objects"},"CrankAccount Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class CrankAccount()\n")),(0,l.kt)("p",null,"A Switchboard account representing a crank of aggregators ordered by next update time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"program")," ",(0,l.kt)("em",{parentName:"li"},"anchor.Program")," - The anchor program ref"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"public_key")," ",(0,l.kt)("em",{parentName:"li"},"PublicKey | None")," - This crank","'","s public key"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"keypair")," ",(0,l.kt)("em",{parentName:"li"},"Keypair | None")," - this crank","'","s keypair")))}k.isMDXComponent=!0}}]);