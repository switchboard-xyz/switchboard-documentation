"use strict";(self.webpackChunk_switchboard_xyz_v2_docs=self.webpackChunk_switchboard_xyz_v2_docs||[]).push([[8953],{5318:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var r=a(7378);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function g(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),l=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=g(e,["components","mdxType","originalType","parentName"]),u=l(a),d=n,h=u["".concat(s,".").concat(d)]||u[d]||p[d]||o;return a?r.createElement(h,i(i({ref:t},c),{},{components:a})):r.createElement(h,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var g={};for(var s in t)hasOwnProperty.call(t,s)&&(g[s]=t[s]);g.originalType=e,g.mdxType="string"==typeof e?e:n,i[1]=g;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4971:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return d}});var r=a(5773),n=a(808),o=(a(7378),a(5318)),i=["components"],g={toc:[{value:"<code>sbv2 aggregator:add:crank AGGREGATORKEY CRANKKEY</code>",id:"sbv2-aggregatoraddcrank-aggregatorkey-crankkey",children:[],level:2},{value:"<code>sbv2 aggregator:add:history AGGREGATORKEY SIZE</code>",id:"sbv2-aggregatoraddhistory-aggregatorkey-size",children:[],level:2},{value:"<code>sbv2 aggregator:add:job AGGREGATORKEY</code>",id:"sbv2-aggregatoraddjob-aggregatorkey",children:[],level:2},{value:"<code>sbv2 aggregator:create:copy AGGREGATORSOURCE QUEUEKEY</code>",id:"sbv2-aggregatorcreatecopy-aggregatorsource-queuekey",children:[],level:2},{value:"<code>sbv2 aggregator:create:json DEFINITIONFILE</code>",id:"sbv2-aggregatorcreatejson-definitionfile",children:[],level:2},{value:"<code>sbv2 aggregator:lease:extend AGGREGATORKEY AMOUNT</code>",id:"sbv2-aggregatorleaseextend-aggregatorkey-amount",children:[],level:2},{value:"<code>sbv2 aggregator:remove:job AGGREGATORKEY JOBKEY</code>",id:"sbv2-aggregatorremovejob-aggregatorkey-jobkey",children:[],level:2},{value:"<code>sbv2 aggregator:update AGGREGATORKEY</code>",id:"sbv2-aggregatorupdate-aggregatorkey",children:[],level:2}]};function s(e){var t=e.components,a=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"interact with a switchboard aggregator account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatoraddcrank-aggregatorkey-crankkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:add:crank AGGREGATORKEY CRANKKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatoraddhistory-aggregatorkey-size"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:add:history AGGREGATORKEY SIZE"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatoraddjob-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:add:job AGGREGATORKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatorcreatecopy-aggregatorsource-queuekey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:create:copy AGGREGATORSOURCE QUEUEKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatorcreatejson-definitionfile"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:create:json DEFINITIONFILE"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatorleaseextend-aggregatorkey-amount"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:lease:extend AGGREGATORKEY AMOUNT"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatorremovejob-aggregatorkey-jobkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:remove:job AGGREGATORKEY JOBKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aggregatorupdate-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aggregator:update AGGREGATORKEY")))),(0,o.kt)("h2",{id:"sbv2-aggregatoraddcrank-aggregatorkey-crankkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:add:crank AGGREGATORKEY CRANKKEY")),(0,o.kt)("p",null,"add the aggregator to a crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:add:crank AGGREGATORKEY CRANKKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to add to a crank\n  CRANKKEY       public key of the crank to add aggregator to\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\nEXAMPLE\n  $ sbv2 aggregator:add:crank --keypair ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/add/crank.ts"},"src/commands/aggregator/add/crank.ts"))),(0,o.kt)("h2",{id:"sbv2-aggregatoraddhistory-aggregatorkey-size"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:add:history AGGREGATORKEY SIZE")),(0,o.kt)("p",null,"add a history buffer to an aggregator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:add:history AGGREGATORKEY SIZE\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to add to a crank\n  SIZE           size of history buffer\n\nOPTIONS\n  -a, --authority=authority  alternate keypair that is the authority for the aggregator\n  -h, --help                 show CLI help\n\n  -k, --keypair=keypair      keypair that will pay for onchain transactions. defaults to new account authority if no\n                             alternate authority provided\n\n  -s, --silent               suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl        alternate RPC url\n\n  -v, --verbose              log everything\n\n  --mainnetBeta              WARNING: use mainnet-beta solana cluster\n\nEXAMPLE\n  $ sbv2 aggregator:add:history --keypair ../payer-keypair.json GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR 10000\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/add/history.ts"},"src/commands/aggregator/add/history.ts"))),(0,o.kt)("h2",{id:"sbv2-aggregatoraddjob-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:add:job AGGREGATORKEY")),(0,o.kt)("p",null,"add a job account to an aggregator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:add:job AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account\n\nOPTIONS\n  -a, --aggregatorAuthority=aggregatorAuthority  alternate keypair that is the authority for the aggregator\n  -f, --outputFile=outputFile                    output file to save aggregator definition to\n  -h, --help                                     show CLI help\n\n  -k, --keypair=keypair                          keypair that will pay for onchain transactions. defaults to new account\n                                                 authority if no alternate authority provided\n\n  -s, --silent                                   suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl                            alternate RPC url\n\n  -v, --verbose                                  log everything\n\n  --force                                        overwrite outputFile if existing\n\n  --jobDefinition=jobDefinition                  filesystem path of job json definition file\n\n  --jobKey=jobKey                                public key of an existing job account to add to an aggregator\n\n  --mainnetBeta                                  WARNING: use mainnet-beta solana cluster\n\nEXAMPLE\n  $ sbv2 aggregator:add:job\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/add/job.ts"},"src/commands/aggregator/add/job.ts"))),(0,o.kt)("h2",{id:"sbv2-aggregatorcreatecopy-aggregatorsource-queuekey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:create:copy AGGREGATORSOURCE QUEUEKEY")),(0,o.kt)("p",null,"copy an aggregator account to a new oracle queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:create:copy AGGREGATORSOURCE QUEUEKEY\n\nARGUMENTS\n  AGGREGATORSOURCE  public key of the aggregator account to copy\n  QUEUEKEY          public key of the queue to create aggregator for\n\nOPTIONS\n  -a, --authority=authority          alternate keypair that will be the aggregator authority\n  -f, --outputFile=outputFile        output file to save aggregator definition to\n  -h, --help                         show CLI help\n\n  -k, --keypair=keypair              keypair that will pay for onchain transactions. defaults to new account authority\n                                     if no alternate authority provided\n\n  -s, --silent                       suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl                alternate RPC url\n\n  -v, --verbose                      log everything\n\n  --existingKeypair=existingKeypair  existing keypair file to store new account. useful for using the same public key on\n                                     different clusters\n\n  --force                            skip job confirmation\n\n  --history=history                  optional, initialize a history buffer of given size\n\n  --mainnetBeta                      WARNING: use mainnet-beta solana cluster\n\nEXAMPLE\n  $ sbv2 aggregator:create:copy 8SXvChNYFhRq4EZuZvnhjrB3jJRQCv4k3P4W6hesH3Ee \n  AY3vpUu6v49shWajeFjHjgikYfaBWNJgax8zoEouUDTs --keypair ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/create/copy.ts"},"src/commands/aggregator/create/copy.ts"))),(0,o.kt)("h2",{id:"sbv2-aggregatorcreatejson-definitionfile"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:create:json DEFINITIONFILE")),(0,o.kt)("p",null,"create an aggregator from a json file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:create:json DEFINITIONFILE\n\nARGUMENTS\n  DEFINITIONFILE  filesystem path of queue definition json file\n\nOPTIONS\n  -a, --authority=authority    alternate keypair that will be the authority for the aggregator\n  -f, --outputFile=outputFile  output aggregator definition to a json file\n  -h, --help                   show CLI help\n\n  -k, --keypair=keypair        keypair that will pay for onchain transactions. defaults to new account authority if no\n                               alternate authority provided\n\n  -q, --queueKey=queueKey      public key of the oracle queue to create aggregator for\n\n  -s, --silent                 suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl          alternate RPC url\n\n  -v, --verbose                log everything\n\n  --force                      overwrite output file\n\n  --mainnetBeta                WARNING: use mainnet-beta solana cluster\n\nALIASES\n  $ sbv2 json:create:aggregator\n\nEXAMPLE\n  $ sbv2 aggregator:create:json examples/aggregator.json --keypair ../payer-keypair.json --queueKey \n  GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --outputFile aggregator.schema.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/create/json.ts"},"src/commands/aggregator/create/json.ts"))),(0,o.kt)("h2",{id:"sbv2-aggregatorleaseextend-aggregatorkey-amount"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:lease:extend AGGREGATORKEY AMOUNT")),(0,o.kt)("p",null,"fund and re-enable an aggregator lease"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:lease:extend AGGREGATORKEY AMOUNT\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to extend a lease for\n  AMOUNT         amount to deposit into aggregator lease\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\nEXAMPLE\n  $ sbv2 aggregator:lease:extend GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR 2500 --keypair ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/lease/extend.ts"},"src/commands/aggregator/lease/extend.ts"))),(0,o.kt)("h2",{id:"sbv2-aggregatorremovejob-aggregatorkey-jobkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:remove:job AGGREGATORKEY JOBKEY")),(0,o.kt)("p",null,"remove a switchboard job account from an aggregator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:remove:job AGGREGATORKEY JOBKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account\n  JOBKEY         public key of an existing job account to remove from an aggregator\n\nOPTIONS\n  -f, --outputFile=outputFile                output file to save aggregator definition to\n  -h, --help                                 show CLI help\n\n  -k, --keypair=keypair                      keypair that will pay for onchain transactions. defaults to new account\n                                             authority if no alternate authority provided\n\n  -s, --silent                               suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl                        alternate RPC url\n\n  -v, --verbose                              log everything\n\n  --aggregatorAuthority=aggregatorAuthority  alternate keypair that is the authority for the aggregator\n\n  --force                                    overwrite outputFile if existing\n\n  --mainnetBeta                              WARNING: use mainnet-beta solana cluster\n\nEXAMPLE\n  $ sbv2 aggregator:remove:job\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/remove/job.ts"},"src/commands/aggregator/remove/job.ts"))),(0,o.kt)("h2",{id:"sbv2-aggregatorupdate-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aggregator:update AGGREGATORKEY")),(0,o.kt)("p",null,"request a new aggregator result from a set of oracles"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aggregator:update AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\nEXAMPLE\n  $ sbv2 aggregator:update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboardv2-cli/blob/v0.1.4/src/commands/aggregator/update.ts"},"src/commands/aggregator/update.ts"))))}s.isMDXComponent=!0;var l=["components"],c={sidebar_position:20,title:"sbv2 aggregator"},p=void 0,u={unversionedId:"switchboardv2-cli/aggregator",id:"switchboardv2-cli/aggregator",title:"sbv2 aggregator",description:"",source:"@site/api/switchboardv2-cli/aggregator.mdx",sourceDirName:"switchboardv2-cli",slug:"/switchboardv2-cli/aggregator",permalink:"/api/switchboardv2-cli/aggregator",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"sbv2 aggregator"},sidebar:"tutorialSidebar",previous:{title:"sbv2 job",permalink:"/api/switchboardv2-cli/job"},next:{title:"sbv2 aggregator:lease",permalink:"/api/switchboardv2-cli/lease"}},d=[],h={toc:d};function b(e){var t=e.components,a=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s,{mdxType:"Sbv2Aggregator"}))}b.isMDXComponent=!0}}]);