"use strict";(self.webpackChunk_switchboard_xyz_v2_docs=self.webpackChunk_switchboard_xyz_v2_docs||[]).push([[9060],{5318:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),b=p(r),d=a,m=b["".concat(c,".").concat(d)]||b[d]||s[d]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},3038:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var n=r(5773),a=r(808),o=(r(7378),r(5318)),i=["components"],l={sidebar_label:"Job",title:"switchboardpy.job"},c=void 0,p={unversionedId:"switchboardpy/job",id:"switchboardpy/job",title:"switchboardpy.job",description:"JobInitParams Objects",source:"@site/api/switchboardpy/job.md",sourceDirName:"switchboardpy",slug:"/switchboardpy/job",permalink:"/api/switchboardpy/job",tags:[],version:"current",frontMatter:{sidebar_label:"Job",title:"switchboardpy.job"},sidebar:"tutorialSidebar",previous:{title:"Crank",permalink:"/api/switchboardpy/crank"},next:{title:"Lease",permalink:"/api/switchboardpy/lease"}},u=[{value:"JobInitParams Objects",id:"jobinitparams-objects",children:[{value:"data",id:"data",children:[],level:4},{value:"name",id:"name",children:[],level:4},{value:"expiration",id:"expiration",children:[],level:4},{value:"variables",id:"variables",children:[],level:4},{value:"keypair",id:"keypair",children:[],level:4}],level:2},{value:"JobAccount Objects",id:"jobaccount-objects",children:[],level:2}],s={toc:u};function b(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"jobinitparams-objects"},"JobInitParams Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass JobInitParams()\n")),(0,o.kt)("p",null,"A serialized protocol buffer holding the schema of the job."),(0,o.kt)("h4",{id:"data"},"data"),(0,o.kt)("p",null,"An optional name to apply to the job account."),(0,o.kt)("h4",{id:"name"},"name"),(0,o.kt)("p",null,"unix_timestamp of when funds can be withdrawn from this account."),(0,o.kt)("h4",{id:"expiration"},"expiration"),(0,o.kt)("p",null,"A required variables oracles must fill to complete the job."),(0,o.kt)("h4",{id:"variables"},"variables"),(0,o.kt)("p",null,"A pre-generated keypair to use."),(0,o.kt)("h4",{id:"keypair"},"keypair"),(0,o.kt)("p",null,"An optional wallet for receiving kickbacks from job usage in feeds.\nDefaults to token vault."),(0,o.kt)("h2",{id:"jobaccount-objects"},"JobAccount Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class JobAccount()\n")),(0,o.kt)("p",null,"A Switchboard account representing a job for an oracle to perform, stored as\na protocol buffer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"program")," ",(0,o.kt)("em",{parentName:"li"},"anchor.Program")," - The anchor program ref"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"public_key")," ",(0,o.kt)("em",{parentName:"li"},"PublicKey | None")," - This aggregator","'","s public key"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"keypair")," ",(0,o.kt)("em",{parentName:"li"},"Keypair | None")," - this aggregator","'","s keypair")))}b.isMDXComponent=!0}}]);