"use strict";(self.webpackChunk_switchboard_xyz_v2_docs=self.webpackChunk_switchboard_xyz_v2_docs||[]).push([[4678],{5318:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return p}});var a=r(7378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),g=u(r),p=n,h=g["".concat(s,".").concat(p)]||g[p]||d[p]||o;return r?a.createElement(h,l(l({ref:t},c),{},{components:r})):a.createElement(h,l({ref:t},c))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},748:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var a=r(5773),n=r(808),o=(r(7378),r(5318)),l=["components"],i={sidebar_label:"Aggregator",title:"switchboardpy.aggregator"},s=void 0,u={unversionedId:"switchboardpy/aggregator",id:"switchboardpy/aggregator",title:"switchboardpy.aggregator",description:"AggregatorSaveResultParams Objects",source:"@site/api/switchboardpy/aggregator.md",sourceDirName:"switchboardpy",slug:"/switchboardpy/aggregator",permalink:"/api/switchboardpy/aggregator",tags:[],version:"current",frontMatter:{sidebar_label:"Aggregator",title:"switchboardpy.aggregator"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/api/switchboardpy/"},next:{title:"Common",permalink:"/api/switchboardpy/common"}},c=[{value:"AggregatorSaveResultParams Objects",id:"aggregatorsaveresultparams-objects",children:[{value:"oracle_idx",id:"oracle_idx",children:[],level:4},{value:"error",id:"error",children:[],level:4},{value:"value",id:"value",children:[],level:4},{value:"min_response",id:"min_response",children:[],level:4},{value:"max_response",id:"max_response",children:[],level:4},{value:"jobs",id:"jobs",children:[],level:4},{value:"queue_authority",id:"queue_authority",children:[],level:4},{value:"token_mint",id:"token_mint",children:[],level:4}],level:2},{value:"AggregatorSetHistoryBufferParams Objects",id:"aggregatorsethistorybufferparams-objects",children:[{value:"size",id:"size",children:[],level:4}],level:2},{value:"AggregatorOpenRoundParams Objects",id:"aggregatoropenroundparams-objects",children:[{value:"oracle_queue_account",id:"oracle_queue_account",children:[],level:4}],level:2},{value:"AggregatorInitParams Objects",id:"aggregatorinitparams-objects",children:[{value:"batch_size",id:"batch_size",children:[],level:4},{value:"min_required_oracle_results",id:"min_required_oracle_results",children:[],level:4},{value:"min_required_job_results",id:"min_required_job_results",children:[],level:4},{value:"min_update_delay_seconds",id:"min_update_delay_seconds",children:[],level:4},{value:"queue_account",id:"queue_account",children:[],level:4},{value:"name",id:"name",children:[],level:4},{value:"metadata",id:"metadata",children:[],level:4},{value:"start_after",id:"start_after",children:[],level:4},{value:"variance_threshold",id:"variance_threshold",children:[],level:4},{value:"force_report_period",id:"force_report_period",children:[],level:4},{value:"expiration",id:"expiration",children:[],level:4},{value:"keypair",id:"keypair",children:[],level:4},{value:"author_wallet",id:"author_wallet",children:[],level:4}],level:2},{value:"AggregatorHistoryRow Objects",id:"aggregatorhistoryrow-objects",children:[{value:"value",id:"value-1",children:[],level:4}],level:2},{value:"AggregatorAccount Objects",id:"aggregatoraccount-objects",children:[],level:2}],d={toc:c};function g(e){var t=e.components,r=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"aggregatorsaveresultparams-objects"},"AggregatorSaveResultParams Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass AggregatorSaveResultParams()\n")),(0,o.kt)("p",null,"Index in the list of oracles in the aggregator assigned to this round update."),(0,o.kt)("h4",{id:"oracle_idx"},"oracle_idx"),(0,o.kt)("p",null,"Reports that an error occurred and the oracle could not send a value."),(0,o.kt)("h4",{id:"error"},"error"),(0,o.kt)("p",null,"Value the oracle is responding with for this update."),(0,o.kt)("h4",{id:"value"},"value"),(0,o.kt)("p",null,"The minimum value this oracle has seen this round for the jobs listed in the\naggregator."),(0,o.kt)("h4",{id:"min_response"},"min_response"),(0,o.kt)("p",null,"The maximum value this oracle has seen this round for the jobs listed in the\naggregator."),(0,o.kt)("h4",{id:"max_response"},"max_response"),(0,o.kt)("p",null,"List of OracleJobs that were performed to produce this result"),(0,o.kt)("h4",{id:"jobs"},"jobs"),(0,o.kt)("p",null,"Authority of the queue the aggregator is attached to"),(0,o.kt)("h4",{id:"queue_authority"},"queue_authority"),(0,o.kt)("p",null,"Program token mint"),(0,o.kt)("h4",{id:"token_mint"},"token_mint"),(0,o.kt)("p",null,"List of parsed oracles"),(0,o.kt)("h2",{id:"aggregatorsethistorybufferparams-objects"},"AggregatorSetHistoryBufferParams Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass AggregatorSetHistoryBufferParams()\n")),(0,o.kt)("p",null,"Number of elements for the history buffer to fit"),(0,o.kt)("h4",{id:"size"},"size"),(0,o.kt)("p",null,"Authority keypair for the aggregator"),(0,o.kt)("h2",{id:"aggregatoropenroundparams-objects"},"AggregatorOpenRoundParams Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass AggregatorOpenRoundParams()\n")),(0,o.kt)("p",null,"The oracle queue from which oracles are assigned this update."),(0,o.kt)("h4",{id:"oracle_queue_account"},"oracle_queue_account"),(0,o.kt)("p",null,"The token wallet which will receive rewards for calling update on this feed."),(0,o.kt)("h2",{id:"aggregatorinitparams-objects"},"AggregatorInitParams Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass AggregatorInitParams()\n")),(0,o.kt)("p",null,"Number of oracles to request on aggregator update."),(0,o.kt)("h4",{id:"batch_size"},"batch_size"),(0,o.kt)("p",null,"Minimum number of oracle responses required before a round is validated."),(0,o.kt)("h4",{id:"min_required_oracle_results"},"min_required_oracle_results"),(0,o.kt)("p",null,"Minimum number of seconds required between aggregator rounds."),(0,o.kt)("h4",{id:"min_required_job_results"},"min_required_job_results"),(0,o.kt)("p",null,"Minimum number of seconds required between aggregator rounds."),(0,o.kt)("h4",{id:"min_update_delay_seconds"},"min_update_delay_seconds"),(0,o.kt)("p",null,"The queue to which this aggregator will be linked"),(0,o.kt)("h4",{id:"queue_account"},"queue_account"),(0,o.kt)("p",null,"Name of the aggregator to store on-chain."),(0,o.kt)("h4",{id:"name"},"name"),(0,o.kt)("p",null,"Metadata of the aggregator to store on-chain."),(0,o.kt)("h4",{id:"metadata"},"metadata"),(0,o.kt)("p",null,"unix_timestamp for which no feed update will occur before."),(0,o.kt)("h4",{id:"start_after"},"start_after"),(0,o.kt)("p",null,"Change percentage required between a previous round and the current round.\nIf variance percentage is not met, reject new oracle responses."),(0,o.kt)("h4",{id:"variance_threshold"},"variance_threshold"),(0,o.kt)("p",null,"Number of seconds for which, even if the variance threshold is not passed,\naccept new responses from oracles."),(0,o.kt)("h4",{id:"force_report_period"},"force_report_period"),(0,o.kt)("p",null,"unix_timestamp after which funds may be withdrawn from the aggregator.\nnull/undefined/0 means the feed has no expiration."),(0,o.kt)("h4",{id:"expiration"},"expiration"),(0,o.kt)("p",null,"An optional wallet for receiving kickbacks from job usage in feeds.\nDefaults to token vault."),(0,o.kt)("h4",{id:"keypair"},"keypair"),(0,o.kt)("p",null,"An optional wallet for receiving kickbacks from job usage in feeds.\nDefaults to token vault."),(0,o.kt)("h4",{id:"author_wallet"},"author_wallet"),(0,o.kt)("p",null,"If included, this keypair will be the aggregator authority rather than\nthe aggregator keypair."),(0,o.kt)("h2",{id:"aggregatorhistoryrow-objects"},"AggregatorHistoryRow Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass AggregatorHistoryRow()\n")),(0,o.kt)("p",null,"AggregatorHistoryRow is a wrapper for the row structure of elements in the aggregator history buffer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"timestamp")," ",(0,o.kt)("em",{parentName:"li"},"int")," - timestamp of the aggregator result"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"value")," ",(0,o.kt)("em",{parentName:"li"},"Decimal")," - Aggregator value at the timestamp")),(0,o.kt)("h4",{id:"value-1"},"value"),(0,o.kt)("p",null,"Generate an AggregatorHistoryRow from a retrieved buffer representation"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"buf")," ",(0,o.kt)("em",{parentName:"li"},"list")," - Anchor-loaded buffer representation of AggregatorHistoryRow")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"AggregatorHistoryRow"),(0,o.kt)("h2",{id:"aggregatoraccount-objects"},"AggregatorAccount Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class AggregatorAccount()\n")),(0,o.kt)("p",null,"AggregatorAccount is the wrapper for an Aggregator, the structure for that keeps aggregated feed data / metadata."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"program")," ",(0,o.kt)("em",{parentName:"li"},"anchor.Program")," - The anchor program ref"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"public_key")," ",(0,o.kt)("em",{parentName:"li"},"PublicKey | None")," - This aggregator","'","s public key"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"keypair")," ",(0,o.kt)("em",{parentName:"li"},"Keypair | None")," - this aggregator","'","s keypair")))}g.isMDXComponent=!0}}]);