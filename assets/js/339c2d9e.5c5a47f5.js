"use strict";(self.webpackChunk_switchboard_xyz_v2_docs=self.webpackChunk_switchboard_xyz_v2_docs||[]).push([[846],{5318:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7378);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=c(r),m=i,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4797:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s}});var n=r(5773),i=r(808),a=(r(7378),r(5318)),l=["components"],o={sidebar_label:"Oraclequeue",title:"switchboardpy.oraclequeue"},u=void 0,c={unversionedId:"switchboardpy/oraclequeue",id:"switchboardpy/oraclequeue",title:"switchboardpy.oraclequeue",description:"OracleQueueInitParams Objects",source:"@site/api/switchboardpy/oraclequeue.md",sourceDirName:"switchboardpy",slug:"/switchboardpy/oraclequeue",permalink:"/api/switchboardpy/oraclequeue",tags:[],version:"current",frontMatter:{sidebar_label:"Oraclequeue",title:"switchboardpy.oraclequeue"},sidebar:"tutorialSidebar",previous:{title:"Oracle",permalink:"/api/switchboardpy/oracle"},next:{title:"Permission",permalink:"/api/switchboardpy/permission"}},s=[{value:"OracleQueueInitParams Objects",id:"oraclequeueinitparams-objects",children:[{value:"reward",id:"reward",children:[],level:4},{value:"min_stake",id:"min_stake",children:[],level:4},{value:"authority",id:"authority",children:[],level:4},{value:"oracle_timeout",id:"oracle_timeout",children:[],level:4},{value:"variance_tolerance_multiplier",id:"variance_tolerance_multiplier",children:[],level:4},{value:"consecutive_feed_failure_limit",id:"consecutive_feed_failure_limit",children:[],level:4},{value:"consecutive_oracle_failure_limit",id:"consecutive_oracle_failure_limit",children:[],level:4},{value:"minimum_delay_seconds",id:"minimum_delay_seconds",children:[],level:4},{value:"queue_size",id:"queue_size",children:[],level:4},{value:"unpermissioned_feeds",id:"unpermissioned_feeds",children:[],level:4},{value:"slashing_enabled",id:"slashing_enabled",children:[],level:4},{value:"feed_probation_period",id:"feed_probation_period",children:[],level:4},{value:"name",id:"name",children:[],level:4}],level:2},{value:"OracleQueueAccount Objects",id:"oraclequeueaccount-objects",children:[],level:2}],d={toc:s};function p(e){var t=e.components,r=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"oraclequeueinitparams-objects"},"OracleQueueInitParams Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass OracleQueueInitParams()\n")),(0,a.kt)("p",null,"Rewards to provide oracles and round openers on this queue."),(0,a.kt)("h4",{id:"reward"},"reward"),(0,a.kt)("p",null,"The minimum amount of stake oracles must present to remain on the queue."),(0,a.kt)("h4",{id:"min_stake"},"min_stake"),(0,a.kt)("p",null,"The account to delegate authority to for creating permissions targeted\nat the queue."),(0,a.kt)("h4",{id:"authority"},"authority"),(0,a.kt)("p",null,"Time period we should remove an oracle after if no response."),(0,a.kt)("h4",{id:"oracle_timeout"},"oracle_timeout"),(0,a.kt)("p",null,"The tolerated variance amount oracle results can have from the\naccepted round result before being slashed.\nslashBound = varianceToleranceMultiplier ","*"," stdDeviation\nDefault: 2"),(0,a.kt)("h4",{id:"variance_tolerance_multiplier"},"variance_tolerance_multiplier"),(0,a.kt)("p",null,"Consecutive failure limit for a feed before feed permission is revoked."),(0,a.kt)("h4",{id:"consecutive_feed_failure_limit"},"consecutive_feed_failure_limit"),(0,a.kt)("p",null,"Consecutive failure limit for an oracle before oracle permission is revoked."),(0,a.kt)("h4",{id:"consecutive_oracle_failure_limit"},"consecutive_oracle_failure_limit"),(0,a.kt)("p",null,"the minimum update delay time for Aggregators"),(0,a.kt)("h4",{id:"minimum_delay_seconds"},"minimum_delay_seconds"),(0,a.kt)("p",null,"Optionally set the size of the queue."),(0,a.kt)("h4",{id:"queue_size"},"queue_size"),(0,a.kt)("p",null,"Enabling this setting means data feeds do not need explicit permission\nto join the queue."),(0,a.kt)("h4",{id:"unpermissioned_feeds"},"unpermissioned_feeds"),(0,a.kt)("p",null,"Whether slashing is enabled on this queue"),(0,a.kt)("h4",{id:"slashing_enabled"},"slashing_enabled"),(0,a.kt)("p",null,"After a feed lease is funded or re-funded, it must consecutively succeed\nN amount of times or its authorization to use the queue is auto-revoked."),(0,a.kt)("h4",{id:"feed_probation_period"},"feed_probation_period"),(0,a.kt)("p",null,"A name to assign to this OracleQueue."),(0,a.kt)("h4",{id:"name"},"name"),(0,a.kt)("p",null,"Buffer for queue metadata."),(0,a.kt)("h2",{id:"oraclequeueaccount-objects"},"OracleQueueAccount Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class OracleQueueAccount()\n")),(0,a.kt)("p",null,"A Switchboard account representing a queue for distributing oracles to\npermitted data feeds."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"program")," ",(0,a.kt)("em",{parentName:"li"},"anchor.Program")," - The anchor program ref"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"public_key")," ",(0,a.kt)("em",{parentName:"li"},"PublicKey | None")," - This OracleQueueAccount","'","s public key"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"keypair")," ",(0,a.kt)("em",{parentName:"li"},"Keypair | None")," - this OracleQueueAccount","'","s keypair")))}p.isMDXComponent=!0}}]);